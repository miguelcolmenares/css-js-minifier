name: Auto-merge Dependabot PRs

on:
  workflow_run:
    workflows: ["Build - Master", "Test VS Code Minimum (1.90.0)", "Test VS Code Stable", "Test VS Code Insiders"]
    types: [completed]

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.event == 'pull_request'
    
    steps:
      - name: Get PR details
        id: pr-details
        uses: actions/github-script@v8
        with:
          script: |
            const { data: pullRequests } = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.payload.workflow_run.head_sha,
            });
            
            if (pullRequests.length === 0) {
              console.log('No PR found for this commit');
              return null;
            }
            
            const pr = pullRequests[0];
            console.log(`Found PR #${pr.number} by ${pr.user.login}`);
            
            return {
              number: pr.number,
              user: pr.user.login,
              mergeable_state: pr.mergeable_state
            };

      - name: Auto-merge Dependabot PRs
        if: fromJSON(steps.pr-details.outputs.result).user == 'dependabot[bot]'
        uses: actions/github-script@v8
        with:
          script: |
            const prNumber = ${{ fromJSON(steps.pr-details.outputs.result).number }};
            
            // Check if all required checks have passed
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });
            
            console.log(`PR #${prNumber} mergeable_state: ${pr.mergeable_state}`);
            
            // Only merge if all checks have passed and PR is ready
            if (pr.mergeable_state === 'clean') {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber,
                merge_method: 'squash',
                commit_title: pr.title,
                commit_message: `${pr.title}\n\n${pr.body || ''}`
              });
              
              console.log(`Successfully merged PR #${prNumber}`);
            } else {
              console.log(`PR #${prNumber} not ready for merge. State: ${pr.mergeable_state}`);
            }