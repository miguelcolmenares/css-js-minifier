name: Build - Master

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # Test extension across multiple VS Code versions and platforms
  # - 1.90.0: Minimum supported version (engine requirement)
  # - stable: Current stable release
  # - insiders: Pre-release version (tested only on Ubuntu for speed)
  test:
    name: Test on ${{ matrix.os }} with VS Code ${{ matrix.vscode-version }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        vscode-version: ['1.90.0', 'stable', 'insiders']
        exclude:
          # Reduce matrix size by excluding some combinations to speed up CI
          - os: macos-latest
            vscode-version: 'insiders'
          - os: windows-latest
            vscode-version: 'insiders'
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v4
        id: cache-npm
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true'}}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        uses: coactions/setup-xvfb@v1
        with:
          run: npm test
        env:
          VSCODE_VERSION: ${{ matrix.vscode-version }}